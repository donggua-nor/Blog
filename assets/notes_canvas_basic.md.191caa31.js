import{_ as l,D as o,o as e,c as p,z as a,a as s,G as t,B as c,O as r}from"./chunks/framework.34487ea2.js";const b=JSON.parse('{"title":"Canvas 2d","description":"","frontmatter":{},"headers":[],"relativePath":"notes/canvas/basic.md","filePath":"notes/canvas/basic.md","lastUpdated":1687168733000}'),B={name:"notes/canvas/basic.md"},y={id:"canvas-2d",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#canvas-2d","aria-label":'Permalink to "Canvas <Badge>2d</Badge>"'},"​",-1),A=r(`<p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API" target="_blank" rel="noreferrer">Canvas | MDN</a> 笔记</p><h2 id="basic" tabindex="-1">Basic <a class="header-anchor" href="#basic" aria-label="Permalink to &quot;Basic&quot;">​</a></h2><h3 id="canvas-元素" tabindex="-1">canvas 元素 <a class="header-anchor" href="#canvas-元素" aria-label="Permalink to &quot;canvas 元素&quot;">​</a></h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" target="_blank" rel="noreferrer">&lt;canvas&gt;</a> HTML 元素用于创建一个用户指定尺寸大小的画布，供 <code>JavaScript</code> 绘制图形、动画等:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement" target="_blank" rel="noreferrer">DOM properties</a></li></ul><ol><li><p><code>canvas</code> 标签常用 <code>width</code>、<code>height</code> 属性作为初始画布比例，当未设置宽度和高度时，默认为 <code>width: 300px; height: 150px;</code></p></li><li><p><code>canvas</code> 标签包裹内容仅在不受支持的浏览器(<strong>&lt;IE9</strong>)显示，可作为后备内容降级渲染</p></li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">canvas</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;canvas&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">width</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;300&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">height</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;150&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">&lt;!-- only shown in unsupported browsers --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">img</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;placeholder.png&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">width</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;300&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">height</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;150&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">canvas</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><code>canvas</code> 标签非 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Void_element#self-closing_tags" target="_blank" rel="noreferrer">单闭合标签</a>，若书写时未正确设置结束标签 <code>&lt;/canvas&gt;</code>，将导致后续全部内容被视为后备内容。</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">canvas</span><span style="color:#ABB2BF;"> </span><span style="color:#FFFFFF;">/</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;anything here&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- same as --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">canvas</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;anything here&lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">canvas</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre></div><ul><li>当同时设置 <code>canvas</code> 标签的宽高属性与 CSS 样式时，若 CSS 的尺寸与初始画布的比例不一致，画布可能会出现扭曲。</li></ul></div><h3 id="渲染上下文" tabindex="-1">渲染上下文 <a class="header-anchor" href="#渲染上下文" aria-label="Permalink to &quot;渲染上下文&quot;">​</a></h3><p>拥有了 <code>canvas</code> 标签创建的画布，就可以通过调用 <code>canvas</code> 元素的实例方法 <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext" target="_blank" rel="noreferrer">getContext()</a> 获取该画布的渲染上下文以使用其<a href="#drawing">绘画功能</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canvas</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;canvas&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canvas</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getContext</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2d&#39;</span><span style="color:#ABB2BF;">)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在不受支持的浏览器中，<code>getContext()</code> 将返回 <code>null</code>，因此可作为兼容性判断</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">ctx</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * alert message</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * Your browser has expired. Update your browser so that</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * you can get best experience on this website</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div></div><h3 id="基于网格的坐标空间" tabindex="-1">基于网格的坐标空间 <a class="header-anchor" href="#基于网格的坐标空间" aria-label="Permalink to &quot;基于网格的坐标空间&quot;">​</a></h3><p><code>canvas</code> 元素默认为网格结构，每个网格单元即为 <code>canvas</code> 元素中的一像素，默认以左上角坐标 <code>[0, 0]</code> 作为画布原点，<strong>当绘制元素时，所有元素位置均是相对于原点定位</strong>。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canvas</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;canvas&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canvas</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getContext</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2d&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fillRect</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">width</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">height</span><span style="color:#ABB2BF;">)</span></span></code></pre></div><img class="d-img__center" src="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/canvas_default_grid.png" alt="canvas_default_grid"><h2 id="shapes" tabindex="-1">Shapes <a class="header-anchor" href="#shapes" aria-label="Permalink to &quot;Shapes&quot;">​</a></h2><p>想象一下我们将使用画笔在画板中绘制一些图形内容，此时 <code>JavaScript</code> 就是画笔，<code>canvas</code> 则是画板。通过了解 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API" target="_blank" rel="noreferrer">Canvas API</a> 具体实践了解在 <code>canvas</code> 中是如何进行绘制的</p><h3 id="paths" tabindex="-1">Paths <a class="header-anchor" href="#paths" aria-label="Permalink to &quot;Paths&quot;">​</a></h3><p>在 <code>canvas</code> 画布中，<strong>路径</strong> (<em>paths</em>) 是最基本的图形元素，路径是通过不同颜色和宽度的线段或曲线相连形成的不同形状的点的集合，相当于构思画笔应该移动的轨迹。</p><p>通常使用路径绘制图形的基本操作是：</p><ol><li>创建路径起始点，相当于准备进行绘制</li><li>将笔触移动到准备落笔的地方</li><li>使用画图命令指定绘制路径，即确认画笔移动轨迹</li><li>闭合绘制完成的路径，调用命令将路径绘制成图形</li></ol><h3 id="lines-线段" tabindex="-1">lines 线段 <a class="header-anchor" href="#lines-线段" aria-label="Permalink to &quot;lines 线段&quot;">​</a></h3><p>了解绘制的基本操作，我们可以通过 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API" target="_blank" rel="noreferrer">Canvas API</a> 实现绘制线段具体体验一下</p><p>相关的实例方法如下：</p><ul><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/beginPath" target="_blank" rel="noreferrer">beginPath()</a> 新建一条路径，将清空子路径列表开始绘制新的图形路径</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo" target="_blank" rel="noreferrer">moveTo(x, y)</a> 将笔触移动到指定的坐标位置 <code>[x, y]</code> 上</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineTo" target="_blank" rel="noreferrer">lineTo(x, y)</a> 绘制一条从当前位置到指定位置 <code>[x, y]</code> 的直线</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/closePath" target="_blank" rel="noreferrer">closePath()</a> 将笔触绘制到当前路径起点，即闭合路径</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/stroke" target="_blank" rel="noreferrer">stroke()</a> 通过线条来绘制图形轮廓</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fill" target="_blank" rel="noreferrer">fill()</a> 通过填充路径的内容区域生成实心的图形</p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canvas</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;canvas&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canvas</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getContext</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2d&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 将笔触移动到 [50, 50]</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">moveTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 落笔指定绘制路径，在此绘制三条直线</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">150</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">150</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 闭合图形，将显示一个完整的 50x50 的矩形</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">closePath</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stroke</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">moveTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">300</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">300</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 不同于上文，此处没有闭合路径，最终的图形是未闭合的矩形</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ctx.closePath()</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stroke</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">moveTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">450</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">450</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lineTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 不同于 stroke() 方法，fill() 方法会自动闭合路径，无需调用 closePath()</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">()</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>本质上，路径是由很多子路径构成，这些子路径都是在一个列表中，所有的子路径（线、弧形、等等）构成图形。因此在开始绘制新路径前都必须调用 <code>beginPath()</code>，清空重置当前的路径列表，以重新绘制新的图形</p></li><li><p><code>closePath()</code> 是非必需的，比如调用 <code>fill()</code> 时会自动闭合图形路径</p></li></ul></div><h3 id="rectangle-矩形" tabindex="-1">rectangle 矩形 <a class="header-anchor" href="#rectangle-矩形" aria-label="Permalink to &quot;rectangle 矩形&quot;">​</a></h3><p>在上文实践绘制线段中，演示了绘制多条直线组合成矩形的方式，实际上 <code>canvas</code> 支持矩形的图形绘制：</p><ul><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect" target="_blank" rel="noreferrer">fillRect(x, y, width, height)</a> 绘制一个填充的矩形</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeRect" target="_blank" rel="noreferrer">strokeRect(x, y, width, height)</a> 绘制一个矩形的边框</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect" target="_blank" rel="noreferrer">clearRect(x, y, width, height)</a> 清除指定矩形区域，让清除部分完全透明。</p></li></ul><p>借此上文例子中的两个矩形可以简化为</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canvas</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;canvas&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canvas</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getContext</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;2d&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">strokeRect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fillRect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>在业务场景中需要清空画布内容时使用 <code>clearRect(0, 0, canvasWidth, canvasHeight)</code> 是非常实用的</li></ul></div><p><strong>除此之外，绘制矩形还有仅绘制矩形路径的 API</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rect" target="_blank" rel="noreferrer">rect(x, y, width, height)</a> 绘制一个左上角坐标为（x,y），宽高为 width 以及 height 的矩形路径添加到当前路径中</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><code>fillRect()</code>、<code>strokeRect()</code> 相当于 <code>rect()</code> + <code>fill()</code>、<code>stroke()</code>的语法糖。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fillRect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 等同于</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 绘制新路径前都必须调用 beginPath()</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">()</span></span></code></pre></div><ul><li>因为 <code>rect()</code> 属于画布的路径命令，从 <code>beginPath()</code> 开始多个单独调用的路径命令属于同个路径列表，将共同应用的绘制样式：</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 仅调用一次 beginPath，后续均为此路径的子路径</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fillStyle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;green&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fillStyle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;blue&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">150</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fillStyle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;yellow&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">()</span></span></code></pre></div><p>因此当希望绘制多个样式的矩形时，应当在调用 <code>rect()</code> 前通过 <code>beginPath()</code> 创建新的路径，或直接使用 <code>fillRect()</code>、<code>strokeRect()</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 创建新的路径并应用绿色样式</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fillStyle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;green&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// green rect</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 创建新的路径并应用蓝色样式</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fillStyle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;blue&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">150</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// blue rect</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 创建新的路径并应用黄色样式</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">fillStyle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;yellow&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rect</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">50</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// yellow rect</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fill</span><span style="color:#ABB2BF;">()</span></span></code></pre></div><ul><li>绘制单个矩形时，<code>fillRect()</code> 与 <code>strokeRect()</code> 的性能更佳；反之绘制多个矩形时，先调用 <code>rect()</code> 创建完所有矩形路径后再执行 <code>fill()</code> 或 <code>strokeRect()</code> 的性能更佳。</li></ul><p>参阅 <a href="https://www.measurethat.net/Benchmarks/Show/2244/0/canvas-paths-performance" target="_blank" rel="noreferrer">canvas-paths-performance</a></p></div><h3 id="circle-ellipse-圆形" tabindex="-1">circle/ellipse 圆形 <a class="header-anchor" href="#circle-ellipse-圆形" aria-label="Permalink to &quot;circle/ellipse 圆形&quot;">​</a></h3><ul><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arc" target="_blank" rel="noreferrer">arc(x, y, radius, startAngle, endAngle, anticlockwise)</a></p><p>根据 <code>anticlockwise</code> 给定的方向（默认为顺时针） ，以 <code>[x,y]</code> 为圆心，从 <code>startAngle</code> 开始到 <code>endAngle</code> 结束，绘制一个半径为 <code>radius</code> 的圆弧或圆形</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/ellipse" target="_blank" rel="noreferrer">ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise)</a></p><p>根据 <code>anticlockwise</code> 给定的方向（默认为顺时针） ，以 <code>[x,y]</code> 为圆心，从 <code>startAngle</code> 开始到 <code>endAngle</code> 结束，绘制一个半径分别为 <code>radiusX</code> 和 <code>radiusY</code> 的椭圆</p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arcTo" target="_blank" rel="noreferrer">arcTo(x1, y1, x2, y2, radius)</a></p><p>根据给定的控制点和半径画一段圆弧，再以直线连接两个控制点。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p><code>arc()</code> 方法中 <code>startAngle</code> 与 <code>endAngle</code> 单位为弧度，与角度的计算公式为：<strong>弧度=(Math.PI/180)*角度</strong>。</p></li><li><p>根据 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes#%E5%9C%86%E5%BC%A7" target="_blank" rel="noreferrer">MDN 中文文档</a> 描述，<code>arcTo()</code> 方法的实现不太可靠，故不在此演示。</p></li></ul></div></li></ul><h3 id="贝塞尔曲线" tabindex="-1">贝塞尔曲线 <a class="header-anchor" href="#贝塞尔曲线" aria-label="Permalink to &quot;贝塞尔曲线&quot;">​</a></h3><ul><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo" target="_blank" rel="noreferrer">quadraticCurveTo(cpx, cpy, x, y)</a></p><p>从当前画笔位置 <code>[beginX, beginY]</code> ，以 <code>[cpx, cpy]</code> 为控制点，<code>[x, y]</code> 为结束点绘制<strong>二次贝塞尔曲线</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">moveTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// [beginX, beginY]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">quadraticCurveTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stroke</span><span style="color:#ABB2BF;">()</span></span></code></pre></div><ul><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo" target="_blank" rel="noreferrer">bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)</a></p><p>从当前画笔位置 <code>[beginX, beginY]</code> ，以 <code>[cp1x, cp1y]</code>、<code>[cp2x, cp2y]</code> 为两个控制点，<code>[x, y]</code> 为结束点绘制<strong>三次贝塞尔曲线</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">beginPath</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">moveTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// [beginX, beginY]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">bezierCurveTo</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">150</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">350</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">400</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">250</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">ctx</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stroke</span><span style="color:#ABB2BF;">()</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Online Demo</p><ul><li><p><a href="http://blogs.sitepointstatic.com/examples/tech/canvas-curves/quadratic-curve.html" target="_blank" rel="noreferrer">二次贝塞尔曲线</a></p></li><li><p><a href="http://blogs.sitepointstatic.com/examples/tech/canvas-curves/bezier-curve.html" target="_blank" rel="noreferrer">三次贝塞尔曲线</a></p></li></ul></div>`,45);function F(d,C,h,g,E,v){const n=o("Badge");return e(),p("div",null,[a("h1",y,[s("Canvas "),t(n,null,{default:c(()=>[s("2d")]),_:1}),s(),i]),A])}const x=l(B,[["render",F]]);export{b as __pageData,x as default};
