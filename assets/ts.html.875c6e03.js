import{r as n,o as i,c as d,d as e,b as t,F as s,a as r,e as h}from"./app.10fb7ff1.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const p={},o=r('<h1 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> TypeScript</h1><h2 id="\u77E5\u8BC6\u70B9" tabindex="-1"><a class="header-anchor" href="#\u77E5\u8BC6\u70B9" aria-hidden="true">#</a> \u77E5\u8BC6\u70B9</h2><h2 id="utility-types" tabindex="-1"><a class="header-anchor" href="#utility-types" aria-hidden="true">#</a> Utility Types</h2>',3),l={href:"https://www.typescriptlang.org/docs/handbook/utility-types.html",target:"_blank",rel:"noopener noreferrer"},y=h("Document"),u=r('<h3 id="partial-type" tabindex="-1"><a class="header-anchor" href="#partial-type" aria-hidden="true">#</a> Partial&lt;Type&gt;</h3><h3 id="required-type" tabindex="-1"><a class="header-anchor" href="#required-type" aria-hidden="true">#</a> Required&lt;Type&gt;</h3><h3 id="readonly-type" tabindex="-1"><a class="header-anchor" href="#readonly-type" aria-hidden="true">#</a> Readonly&lt;Type&gt;</h3><h3 id="record-keys-type" tabindex="-1"><a class="header-anchor" href="#record-keys-type" aria-hidden="true">#</a> Record&lt;Keys, Type&gt;</h3><h3 id="pick-type-keys" tabindex="-1"><a class="header-anchor" href="#pick-type-keys" aria-hidden="true">#</a> Pick&lt;Type, Keys&gt;</h3><h3 id="omit-type-keys" tabindex="-1"><a class="header-anchor" href="#omit-type-keys" aria-hidden="true">#</a> Omit&lt;Type, Keys&gt;</h3><h3 id="exclude-uniontype-excludedmembers" tabindex="-1"><a class="header-anchor" href="#exclude-uniontype-excludedmembers" aria-hidden="true">#</a> Exclude&lt;UnionType, ExcludedMembers&gt;</h3><h3 id="extract-type-union" tabindex="-1"><a class="header-anchor" href="#extract-type-union" aria-hidden="true">#</a> Extract&lt;Type, Union&gt;</h3><h3 id="nonnullable-type" tabindex="-1"><a class="header-anchor" href="#nonnullable-type" aria-hidden="true">#</a> NonNullable&lt;Type&gt;</h3><h3 id="parameters-type" tabindex="-1"><a class="header-anchor" href="#parameters-type" aria-hidden="true">#</a> Parameters&lt;Type&gt;</h3><h3 id="constructorparameters-type" tabindex="-1"><a class="header-anchor" href="#constructorparameters-type" aria-hidden="true">#</a> ConstructorParameters&lt;Type&gt;</h3><h3 id="returntype-type" tabindex="-1"><a class="header-anchor" href="#returntype-type" aria-hidden="true">#</a> ReturnType&lt;Type&gt;</h3><h3 id="instancetype-type" tabindex="-1"><a class="header-anchor" href="#instancetype-type" aria-hidden="true">#</a> InstanceType&lt;Type&gt;</h3><h3 id="thisparametertype-type" tabindex="-1"><a class="header-anchor" href="#thisparametertype-type" aria-hidden="true">#</a> ThisParameterType&lt;Type&gt;</h3><h3 id="omitthisparameter-type" tabindex="-1"><a class="header-anchor" href="#omitthisparameter-type" aria-hidden="true">#</a> OmitThisParameter&lt;Type&gt;</h3><h3 id="thistype-type" tabindex="-1"><a class="header-anchor" href="#thistype-type" aria-hidden="true">#</a> ThisType&lt;Type&gt;</h3><h2 id="type-challenges" tabindex="-1"><a class="header-anchor" href="#type-challenges" aria-hidden="true">#</a> Type-Challenges</h2>',17),m={href:"https://github.com/type-challenges/type-challenges",target:"_blank",rel:"noopener noreferrer"},x=h("Github repo");function b(f,g){const a=n("ExternalLinkIcon");return i(),d(s,null,[o,e("blockquote",null,[e("p",null,[e("a",l,[y,t(a)])])]),u,e("blockquote",null,[e("p",null,[e("a",m,[x,t(a)])])])],64)}var k=c(p,[["render",b]]);export{k as default};
